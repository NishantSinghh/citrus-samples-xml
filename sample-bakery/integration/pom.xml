<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>citrus-sample-bakery</artifactId>
    <groupId>com.consol.citrus.samples</groupId>
    <version>2.7.5-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>citrus-bakery-integration</artifactId>
  <name>citrus-bakery-integration</name>

  <properties>
    <jetty.embedded.disabled>false</jetty.embedded.disabled>
    <activemq.embedded.disabled>false</activemq.embedded.disabled>
  </properties>

  <dependencies>
    <!-- Citrus -->
    <dependency>
      <groupId>com.consol.citrus</groupId>
      <artifactId>citrus-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.consol.citrus</groupId>
      <artifactId>citrus-http</artifactId>
    </dependency>
    <dependency>
      <groupId>com.consol.citrus</groupId>
      <artifactId>citrus-ws</artifactId>
    </dependency>
    <dependency>
      <groupId>com.consol.citrus</groupId>
      <artifactId>citrus-jms</artifactId>
    </dependency>
    <dependency>
      <groupId>com.consol.citrus</groupId>
      <artifactId>citrus-mail</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-broker</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <activemq.server.host>${docker.host.name}</activemq.server.host>
            <activemq.server.port>${activemq.server.port}</activemq.server.port>
            <bakery.server.host>${docker.host.name}</bakery.server.host>
            <bakery.server.port>${bakery.server.port}</bakery.server.port>
            <report.server.host>${docker.host.name}</report.server.host>
            <report.server.port>${report.server.port}</report.server.port>
            <mail.server.port>${mail.server.port}</mail.server.port>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <configuration>
          <war>
            ${pom.basedir}/src/jolokia/jolokia-war-1.3.1.war
          </war>
          <webApp>
            <contextPath>/jolokia</contextPath>
            <tempDirectory>${project.build.directory}/tmp/jolokia</tempDirectory>
          </webApp>
          <httpConnector>
            <port>${bakery.server.port}</port>
            <idleTimeout>60000</idleTimeout>
          </httpConnector>
          <!-- jetty.xml for using multiple ports inside of one jetty -->
          <jettyXml>
            ${pom.basedir}/src/jetty/jetty-embedded.xml
          </jettyXml>
          <contextHandlers>
            <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
              <war>
                ${settings.localRepository}/com/consol/citrus/samples/citrus-bakery-web/${project.version}/citrus-bakery-web-${project.version}.war
              </war>
              <contextPath>/bakery</contextPath>
              <tempDirectory>${project.build.directory}/tmp/bakery</tempDirectory>
            </contextHandler>
            <contextHandler implementation="org.eclipse.jetty.maven.plugin.JettyWebAppContext">
              <war>
                ${settings.localRepository}/com/consol/citrus/samples/citrus-bakery-report/${project.version}/citrus-bakery-report-${project.version}.war
              </war>
              <contextPath>/report</contextPath>
              <tempDirectory>${project.build.directory}/tmp/report</tempDirectory>
            </contextHandler>
          </contextHandlers>
          <systemProperties>
            <systemProperty>
              <name>ACTIVEMQ_PORT_61616_TCP_ADDR</name>
              <value>${docker.host.name}</value>
            </systemProperty>
            <systemProperty>
              <name>ACTIVEMQ_PORT_61616_TCP_PORT</name>
              <value>${activemq.server.port}</value>
            </systemProperty>
            <systemProperty>
              <name>REPORT_PORT_8080_TCP_ADDR</name>
              <value>${docker.host.name}</value>
            </systemProperty>
            <systemProperty>
              <name>REPORT_PORT_8080_TCP_PORT</name>
              <value>${report.server.port}</value>
            </systemProperty>
            <systemProperty>
              <name>MAIL_PORT_2222_TCP_ADDR</name>
              <value>${docker.host.name}</value>
            </systemProperty>
            <systemProperty>
              <name>MAIL_PORT_2222_TCP_PORT</name>
              <value>${mail.server.port}</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <configuration>
          <logDate>default</logDate>
          <verbose>true</verbose>
          <images>
            <image>
              <alias>activemq-broker</alias>
              <name>consol/${message.broker}:latest</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <ports>
                  <port>${activemq.server.port}:61616</port>
                  <port>${activemq.admin.port}:8161</port>
                </ports>
                <wait>
                  <log>Broker startup</log>
                  <http>
                    <url>http://${docker.host.name}:${activemq.admin.port}</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>bakery-web-server</alias>
              <name>consol/${application.server}:latest</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>bakery-web</image>
                  </from>
                </volumes>
                <links>
                  <link>activemq-broker:activemq</link>
                </links>
                <env>
                  <CATALINA_OPTS>-Xmx64m</CATALINA_OPTS>
                </env>
                <ports>
                  <port>${bakery.server.port}:8080</port>
                </ports>
                <wait>
                  <log>Server startup</log>
                  <http>
                    <url>http://${docker.host.name}:${bakery.server.port}/bakery/jolokia</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>report-server</alias>
              <name>consol/${application.server}:latest</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>bakery-report</image>
                  </from>
                </volumes>
                <env>
                  <CATALINA_OPTS>-Xmx64m</CATALINA_OPTS>
                  <MAIL_PORT_2222_TCP_ADDR>${env.HOST_IP}</MAIL_PORT_2222_TCP_ADDR>
                  <MAIL_PORT_2222_TCP_PORT>${mail.server.port}</MAIL_PORT_2222_TCP_PORT>
                </env>
                <ports>
                  <port>${report.server.port}:8080</port>
                </ports>
                <wait>
                  <log>Server startup</log>
                  <http>
                    <url>http://${docker.host.name}:${report.server.port}/report/jolokia</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>worker-chocolate</alias>
              <name>jolokia/java-jolokia:7</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>bakery-worker</image>
                  </from>
                </volumes>
                <links>
                  <link>report-server:report</link>
                  <link>activemq-broker:activemq</link>
                </links>
                <env>
                  <FACTORY_TYPE>chocolate</FACTORY_TYPE>
                  <FACTORY_COSTS>200</FACTORY_COSTS>
                </env>
                <cmd>java -jar maven/worker.jar</cmd>
                <wait>
                  <log>.*bakery-worker..started</log>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>worker-blueberry</alias>
              <name>jolokia/java-jolokia:7</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>bakery-worker</image>
                  </from>
                </volumes>
                <links>
                  <link>report-server:report</link>
                  <link>activemq-broker:activemq</link>
                </links>
                <env>
                  <FACTORY_TYPE>blueberry</FACTORY_TYPE>
                  <FACTORY_COSTS>400</FACTORY_COSTS>
                </env>
                <cmd>java -jar maven/worker.jar</cmd>
                <wait>
                  <log>.*bakery-worker..started</log>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>worker-caramel</alias>
              <name>jolokia/java-jolokia:7</name>
              <run>
                <namingStrategy>alias</namingStrategy>
                <volumes>
                  <from>
                    <image>bakery-worker</image>
                  </from>
                </volumes>
                <links>
                  <link>report-server:report</link>
                  <link>activemq-broker:activemq</link>
                </links>
                <env>
                  <FACTORY_TYPE>caramel</FACTORY_TYPE>
                  <FACTORY_COSTS>100</FACTORY_COSTS>
                </env>
                <cmd>java -jar maven/worker.jar</cmd>
                <wait>
                  <log>.*bakery-worker..started</log>
                  <time>60000</time>
                  <shutdown>500</shutdown>
                </wait>
                <log>
                  <enabled>true</enabled>
                  <color>green</color>
                </log>
              </run>
            </image>
            <image>
              <alias>bakery-web</alias>
              <name>citrus/bakery-web:${project.version}</name>
            </image>
            <image>
              <alias>bakery-report</alias>
              <name>citrus/bakery-report:${project.version}</name>
            </image>
            <image>
              <alias>bakery-worker</alias>
              <name>citrus/bakery-worker:${project.version}</name>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>workers-embedded</id>
      <activation>
        <property>
          <name>embedded</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-chocolate-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.sh</executable>
                  <arguments>
                    <argument>chocolate</argument>
                    <argument>200</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>start-blueberry-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.sh</executable>
                  <arguments>
                    <argument>blueberry</argument>
                    <argument>400</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>start-caramel-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.sh</executable>
                  <arguments>
                    <argument>caramel</argument>
                    <argument>100</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>stop-application</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/stop.sh</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>windows-workers-embedded</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-chocolate-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.bat</executable>
                  <arguments>
                    <argument>chocolate</argument>
                    <argument>200</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>start-blueberry-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.bat</executable>
                  <arguments>
                    <argument>blueberry</argument>
                    <argument>400</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>start-caramel-worker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/start.bat</executable>
                  <arguments>
                    <argument>caramel</argument>
                    <argument>100</argument>
                  </arguments>
                </configuration>
              </execution>
              <execution>
                <id>stop-application</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>${basedir}/../worker/target/stop.bat</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
