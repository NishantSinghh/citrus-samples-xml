<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:http="http://www.citrusframework.org/schema/http/testcase"
              xmlns:jdbc="http://www.citrusframework.org/schema/jdbc/message"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd
                                  http://www.citrusframework.org/schema/http/testcase http://www.citrusframework.org/schema/http/testcase/citrus-http-testcase.xsd
                                  http://www.citrusframework.org/schema/jdbc/message http://www.citrusframework.org/schema/jdbc/message/citrus-jdbc-message.xsd">

  <testcase name="TodoListIT.TransactionRollback">
    <meta-info>
      <author>Citrus</author>
      <creationdate>2017-12-04</creationdate>
      <status>FINAL</status>
      <last-updated-by>Citrus</last-updated-by>
      <last-updated-on>2017-12-04T00:00:00</last-updated-on>
    </meta-info>

    <variables>
      <variable name="todoName" value="citrus:concat('todo_', citrus:randomNumber(4))"/>
      <variable name="todoDescription" value="Description: ${todoName}"/>
    </variables>

    <actions>
      <http:send-request client="todoClient" fork="true">
        <http:POST path="/todolist">
          <http:headers content-type="application/x-www-form-urlencoded"/>
          <http:body>
            <http:data>title=${todoName}&amp;description=${todoDescription}</http:data>
          </http:body>
        </http:POST>
      </http:send-request>

      <receive endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation>
              <jdbc:transaction-started/>
            </jdbc:operation>
          </payload>
        </message>
      </receive>

      <send endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation-result>
              <jdbc:success>true</jdbc:success>
            </jdbc:operation-result>
          </payload>
        </message>
      </send>

      <receive endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation>
              <jdbc:execute>
                <jdbc:statement>
                  <jdbc:sql>@startsWith('INSERT INTO todo_entries (id, title, description, done) VALUES (?, ?, ?, ?)')@</jdbc:sql>
                </jdbc:statement>
              </jdbc:execute>
            </jdbc:operation>
          </payload>
        </message>
      </receive>

      <send endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation-result>
              <jdbc:success>false</jdbc:success>
              <jdbc:exception>Could not execute something</jdbc:exception>
            </jdbc:operation-result>
          </payload>
        </message>
      </send>

      <receive endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation>
              <jdbc:transaction-rollback/>
            </jdbc:operation>
          </payload>
        </message>
      </receive>

      <send endpoint="jdbcServer">
        <message>
          <payload>
            <jdbc:operation-result>
              <jdbc:success>true</jdbc:success>
            </jdbc:operation-result>
          </payload>
        </message>
      </send>

      <http:receive-response client="todoClient">
        <http:headers status="500" reason-phrase="INTERNAL_SERVER_ERROR"/>
      </http:receive-response>
    </actions>
  </testcase>
</spring:beans>