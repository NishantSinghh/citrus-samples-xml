<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:jms="http://www.springframework.org/schema/integration/jms"
       xmlns:http="http://www.springframework.org/schema/integration/http"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/integration
            http://www.springframework.org/schema/integration/spring-integration.xsd
            http://www.springframework.org/schema/integration/jms
            http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
            http://www.springframework.org/schema/integration/http
            http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/oxm
            http://www.springframework.org/schema/oxm/spring-oxm.xsd">

  <context:annotation-config />
  <tx:annotation-driven transaction-manager="transactionManager" />

  <int:poller id="poller"
              fixed-rate="1000" max-messages-per-poll="1" default="true" />

  <int:logging-channel-adapter id="logger" level="DEBUG"/>

  <int:channel id="errorChannel">
    <int:interceptors>
      <int:wire-tap channel="logger"/>
    </int:interceptors>
  </int:channel>

  <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="tcp://localhost:61616" />
    <property name="watchTopicAdvisories" value="false"/>
  </bean>

  <jms:message-driven-channel-adapter id="bookingIn" destination-name="Travel.Agency.Request.Queue" channel="bookingsXML"/>

  <int:channel id="bookingsXML"/>
  <int:transformer input-channel="bookingsXML" ref="unmarshallingTransformer" output-channel="bookings"/>

  <bean id="unmarshallingTransformer" class="org.springframework.integration.xml.transformer.UnmarshallingTransformer">
    <constructor-arg>
      <ref bean="bookingMarshaller"/>
    </constructor-arg>
  </bean>

  <oxm:jaxb2-marshaller id="bookingMarshaller" context-path="com.consol.citrus.samples.flightbooking.model"/>

  <int:channel id="bookings"/>
  <int:splitter input-channel="bookings" ref="bookingSplitter" output-channel="flights"/>

  <bean id="bookingSplitter" class="com.consol.citrus.samples.flightbooking.BookingSplitter">
    <property name="customerDao" ref="customerDao"/>
    <property name="flightDao" ref="flightDao"/>
  </bean>

  <int:channel id="flights"/>
  <int:router input-channel="flights" ref="flightRouter"/>

  <bean id="flightRouter" class="com.consol.citrus.samples.flightbooking.FlightRouter">
    <property name="airlineMappings">
      <map>
        <entry key="RoyalAirline" value-ref="royalAirlineFlights"/>
        <entry key="SmartAirline" value-ref="smartAirlineFlights"/>
      </map>
    </property>
  </bean>

  <int:channel id="royalAirlineFlights"/>
  <int:channel id="royalAirlineFlightsXML">
    <int:interceptors>
      <int:wire-tap channel="logger"/>
    </int:interceptors>
  </int:channel>

  <int:transformer input-channel="royalAirlineFlights" ref="marshallingTransformer" output-channel="royalAirlineFlightsXML"/>
  <http:outbound-gateway id="royalAirlineGateway"
                         request-channel="royalAirlineFlightsXML"
                         url="http://localhost:8074/flight"
                         http-method="POST"
                         expected-response-type="java.lang.String"
                         charset="UTF-8"
                         reply-timeout="5000"
                         reply-channel="confirmedFlightsXML"
                         header-mapper="httpHeaderMapper"/>

  <bean id="httpHeaderMapper" class="com.consol.citrus.samples.flightbooking.header.HttpHeaderMapper">
    <property name="inboundHeaderNames" value ="X-*, HTTP_RESPONSE_HEADERS"/>
    <property name="outboundHeaderNames" value="sequenceNumber, sequenceSize, bookingCorrelationId, HTTP_REQUEST_HEADERS"/>
    <property name="userDefinedHeaderPrefix" value=""/>
  </bean>

  <int:channel id="smartAirlineFlights"/>
  <int:channel id="smartAirlineFlightsXML">
    <int:interceptors>
      <int:wire-tap channel="logger"/>
    </int:interceptors>
  </int:channel>

  <int:transformer input-channel="smartAirlineFlights" ref="marshallingTransformer" output-channel="smartAirlineFlightsXML"/>

  <jms:outbound-channel-adapter id="smartAirlineAdapter" channel="smartAirlineFlightsXML" destination-name="Smart.Airline.Request.Queue"/>

  <int:channel id="confirmedFlightsXML">
    <int:interceptors>
      <int:wire-tap channel="logger"/>
    </int:interceptors>
  </int:channel>

  <jms:message-driven-channel-adapter id="smartConfirmedFlightsAdapter" destination-name="Smart.Airline.Response.Queue" channel="confirmedFlightsXML"/>

  <int:channel id="confirmedFlights"/>
  <int:transformer input-channel="confirmedFlightsXML" ref="unmarshallingTransformer" output-channel="confirmedFlights"/>

  <int:aggregator input-channel="confirmedFlights"
                  ref="flightAggregator"
                  method="processFlights"
                  output-channel="bookingResults"
                  message-store="simpleMessageStore"
                  correlation-strategy="flightCorrelationStrategy"
                  correlation-strategy-method="getCorrelationKey"
                  send-timeout="5000"
                  send-partial-result-on-expiry="false"/>

  <bean id="simpleMessageStore" class="org.springframework.integration.store.SimpleMessageStore"/>
  <bean id="flightAggregator" class="com.consol.citrus.samples.flightbooking.FlightAggregator"/>
  <bean id="flightCorrelationStrategy" class="com.consol.citrus.samples.flightbooking.FlightCorrelationStrategy"/>

  <int:channel id="bookingResultsXML">
    <int:interceptors>
      <int:wire-tap channel="logger"/>
    </int:interceptors>
  </int:channel>
  <int:transformer input-channel="bookingResults" ref="marshallingTransformer" output-channel="bookingResultsXML"/>
  <bean id="marshallingTransformer" class="org.springframework.integration.xml.transformer.MarshallingTransformer">
    <constructor-arg>
      <ref bean="bookingMarshaller"/>
    </constructor-arg>
    <constructor-arg>
      <bean class="org.springframework.integration.xml.transformer.ResultToStringTransformer"/>
    </constructor-arg>
  </bean>

  <jms:outbound-channel-adapter id="bookingOut" channel="bookingResultsXML" destination-name="Travel.Agency.Response.Queue"/>

  <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

  <bean id="customerDao" class="com.consol.citrus.samples.flightbooking.persistence.impl.CustomerDaoImpl"/>

  <bean id="flightDao" class="com.consol.citrus.samples.flightbooking.persistence.impl.FlightDaoImpl"/>

  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="persistenceUnitName" value="flightbooking" />
    <property name="persistenceUnitManager">
      <bean class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="defaultDataSource" ref="dataSource" />
      </bean>
    </property>
    <property name="jpaDialect">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
    </property>
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="showSql" value="true"/>
        <property name="generateDdl" value="true"/>
        <property name="databasePlatform" value="org.hibernate.dialect.HSQLDialect"/>
      </bean>
    </property>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
      </props>
    </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:mem:flightbooking-test"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>
</beans>
